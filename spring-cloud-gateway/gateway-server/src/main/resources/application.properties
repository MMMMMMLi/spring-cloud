spring.application.name=gateway-server

server.port=20007

logging.level.org.springframework.cloud.gateway=debug

# eureka
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${server.port}
eureka.client.service-url.defaultZone=http://localhost:20001/eureka/

# gateway
# 是否与服务注册于发现组件进行结合，通过 serviceId 转发到具体的服务实例
spring.cloud.gateway.discovery.locator.enabled=true
# 配置一下自定义路由规则
spring.cloud.gateway.routes[0].id=producerRoutes
# 格式为：lb://应用注册服务名
spring.cloud.gateway.routes[0].uri=lb://gateway-producer
# 级别越小约先执行
spring.cloud.gateway.routes[0].order=0
# 这个是配置路由规则的
spring.cloud.gateway.routes[0].predicates[0]=Path=/producer/**
# 这是过滤器
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[0].filters[1]=PrefixPath=/producer
spring.cloud.gateway.routes[0].filters[2]=AddResponseHeader=X-Response-Default-Foo, Default-Bar
spring.cloud.gateway.routes[0].filters[3]=AddRequestParameter=token, mengli
# 熔断降级
spring.cloud.gateway.routes[0].filters[4].name=Hystrix
spring.cloud.gateway.routes[0].filters[4].args.name=fallbackcmd
spring.cloud.gateway.routes[0].filters[4].args.fallbackUri=forward:/fallback
# 配置熔断超时时间
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=6000
hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds=8000
# 重试
spring.cloud.gateway.routes[0].filters[5].name=Retry
# 重试次数，默认值是 3 次
spring.cloud.gateway.routes[0].filters[5].args.retries=1
# HTTP 的状态返回码，取值请参考：org.springframework.http.HttpStatus
#spring.cloud.gateway.routes[0].filters[5].args.statuses=OK
# 指定哪些方法的请求需要进行重试逻辑，默认值是 GET 方法，取值参考：org.springframework.http.HttpMethod
#spring.cloud.gateway.routes[0].filters[5].args.methods=GET
# 一些列的状态码配置，取值参考：org.springframework.http.HttpStatus.Series。符合的某段状态码才会进行重试逻辑，默认值是 SERVER_ERROR，值是 5，也就是 5XX(5 开头的状态码)，共有5 个值。
#spring.cloud.gateway.routes[0].filters[5].args.series=SERVER_ERROR
# 指定哪些异常需要进行重试逻辑，默认值是java.io.IOException
#spring.cloud.gateway.routes[0].filters[5].args.exceptions=java.io.IOException